#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        bt_select: bt_select {
            compatible = "zmk,behavior-sensor-rotate";
            label = "BT_SELECT";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        input {
            bindings = <&out OUT_TOG>;
            key-positions = <22 23>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Alphas";
            bindings = <
&sl 5       &kp Q        &kp W  &kp M       &mt PRINTSCREEN P  &sl 6                                    &kp RG(UP_ARROW)                   &sl 6  &kp F    &kp U                     &kp Y  &kp J        &sl 5
&sl 4       &kp R        &kp S  &kp T       &kp H              &kp X                &kp RG(LEFT_ARROW)  &kp RG(D)           &kp RG(RIGHT)  &kp Q  &kp N    &kp A                     &kp I  &kp O        &sl 4
&kp RETURN  &key_repeat  &kp C  &kp G       &kp D              &sl 7  &kp RC(N0)                        &kp RG(DOWN_ARROW)                 &sl 7  &kp L    &kp K                     &kp V  &key_repeat  &kp RETURN
                                &mt F4 ESC  &lt 2 SPACE        &sl 1                                                                       &sl 1  &lt 3 E  &mt RG(L) RA(RC(DELETE))
            >;

            sensor-bindings = <&inc_dec_kp RC(EQUAL) RC(MINUS)>;
        };

        Super {
            bindings = <
&trans  &trans  &trans  &trans          &trans             &trans                    &trans          &trans  &trans             &trans          &trans  &trans  &trans
&trans  &trans  &trans  &trans          &trans             &trans            &trans  &trans  &trans  &trans  &trans             &trans          &trans  &trans  &trans
&trans  &trans  &trans  &trans          &trans             &trans  &trans            &trans          &trans  &trans             &trans          &trans  &trans  &trans
                        &kp RC(DELETE)  &kp RC(BACKSPACE)  &none                                     &none   &kp RC(BACKSPACE)  &kp RC(DELETE)
            >;
        };

        Navigation {
            bindings = <
&trans   &trans           &trans           &kp UP_ARROW     &trans           &trans                                &kp C_PLAY_PAUSE              &trans  &trans          &mmv MOVE_UP    &trans           &trans     &trans
&kp TAB  &trans           &kp LEFT_ARROW   &kp DOWN_ARROW   &kp RIGHT_ARROW  &trans                &kp C_PREVIOUS  &trans            &kp C_NEXT  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK  &trans
&trans   &mt RC(F) RC(A)  &mt RG(V) RC(V)  &mt RC(X) RC(C)  &mt RC(Y) RC(Z)  &trans  &bt BT_CLR                    &kp C_MUTE                    &trans  &trans          &trans          &trans           &trans     &trans
                                           &trans           &none            &trans                                                              &trans  &mkp LCLK       &trans
            >;

            sensor-bindings = <&bt_select>;
        };

        Num+Sym {
            bindings = <
&trans  &trans  &kp N7       &kp N3  &kp N4  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N0  &key_repeat  &kp N1  &kp N2  &kp N9            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N8       &kp N5  &kp N6  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans                                    &trans  &none   &trans
            >;
        };

        Ultra {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&none   &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&none   &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &none
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &none                     &trans          &none   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &none   &trans            &trans          &none   &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
