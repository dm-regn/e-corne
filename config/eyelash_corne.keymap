#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        bt_select: bt_select {
            compatible = "zmk,behavior-sensor-rotate";
            label = "BT_SELECT";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        input {
            bindings = <&out OUT_TOG>;
            key-positions = <5 0>;
            layers = <2>;
        };

        caps {
            bindings = <&caps_word>;
            key-positions = <45 44>;
            layers = <0>;
        };
    };

    macros {
        carets: carets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp GT &kp LEFT_ARROW>;
            label = "CARETS";
        };

        parents: parents {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT_ARROW>;
            label = "PARENTS";
        };

        brackets: brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RIGHT_BRACKET &kp LEFT_ARROW>;
            label = "BRACKETS";
        };

        curls: curls {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT_ARROW>;
            label = "CURLS";
        };

        not_app: not_app {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N) &kp FSLH &kp LS(A)>;
            label = "NOT_APP";
        };

        year: year {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N0 &kp N2 &kp N5>;
            label = "YEAR";
        };

        main_ad: main_ad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp E &kp L &kp L &kp O &kp N &kp DOT &kp M &kp O &kp Y>;
            label = "MAIN_AD";
        };

        super_ad: super_ad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp DOT &kp D &kp E &kp L &kp L &kp O &kp N &kp DOT &kp M &kp O &kp Y>;
            label = "SUPER_AD";
        };

        dbl_mclk: dbl_mclk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp LCLK &mkp LCLK>;
            label = "DBL_MCLK";
        };

        apo_r: apo_r {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp R &kp E &kp SPACE>;
            label = "APO_R";
        };

        apo_s: apo_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp S &kp SPACE>;
            label = "APO_S";
        };

        apo_t: apo_t {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp T &kp SPACE>;
            label = "APO_T";
        };

        apo_y: apo_y {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp SQT>;
            label = "APO_Y";
        };

        apo_L: apo_L {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp L &kp L &kp SPACE>;
            label = "APO_L";
        };

        apo_v: apo_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp V &kp E &kp SPACE>;
            label = "APO_V";
        };

        au: au {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp U>;
            label = "AU";
        };

        sw: sw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp W>;
            label = "SW";
        };

        vi: vi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp V &kp I>;
            label = "VI";
        };

        cs: cs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp S>;
            label = "CS";
        };

        fl: fl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp L>;
            label = "FL";
        };

        lf: lf {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp F>;
            label = "LF";
        };

        comma: comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "COMMA";
        };

        period: period {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp SPACE>;
            label = "PERIOD";
        };

        gm: gm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp M>;
            label = "GM";
        };

        dot_com: dot_com {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp C &kp O &kp M>;
            label = "DOT_COM";
        };

        dot_net: dot_net {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N &kp E &kp T>;
            label = "DOT_NET";
        };

        dot_org: dot_org {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp O &kp R &kp G>;
            label = "DOT_ORG";
        };

        dot_gov: dot_gov {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp G &kp O &kp V>;
            label = "DOT_GOV";
        };

        pd: pd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp D>;
            label = "PD";
        };

        ef: ef {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp F>;
            label = "EF";
        };

        fe: fe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp E>;
            label = "FE";
        };

        apo_c: apo_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp SQT>;
            label = "APO_C";
        };

        apo_n: apo_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp SQT>;
            label = "APO_N";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Alphas";
            bindings = <
&sl 5       &kp X        &kp W           &kp M        &mt PRINTSCREEN P  &sl 6                                    &kp RG(UP_ARROW)                   &sl 6  &kp F        &kp U                     &kp Y            &kp Q        &sl 5
&sl 4       &mt LGUI R   &mt LEFT_ALT S  &mt LCTRL T  &mt LEFT_SHIFT H   &kp B                &kp RG(LEFT_ARROW)  &kp RG(D)           &kp RG(RIGHT)  &kp J  &mt RSHFT N  &mt RCTRL A               &mt RIGHT_ALT I  &mt RGUI O   &sl 4
&kp RETURN  &key_repeat  &kp C           &kp G        &kp D              &sl 7  &kp RC(N0)                        &kp RG(DOWN_ARROW)                 &sl 7  &kp L        &kp K                     &kp V            &key_repeat  &kp RETURN
                                         &mt F4 ESC   &lt 2 SPACE        &sl 1                                                                       &sl 1  &lt 3 E      &mt RG(L) RA(RC(DELETE))
            >;

            sensor-bindings = <&inc_dec_kp RC(EQUAL) RC(MINUS)>;
        };

        Super {
            bindings = <
&kp DELETE  &trans  &trans  &trans          &pd                &kp BACKSPACE                    &trans          &trans  &fl                &au             &trans  &trans  &trans
&trans      &trans  &sw     &trans          &trans             &trans                   &trans  &trans  &trans  &trans  &trans             &trans          &vi     &trans  &trans
&trans      &trans  &cs     &gm             &trans             &trans         &trans            &trans          &trans  &lf                &trans          &trans  &trans  &trans
                            &kp RC(DELETE)  &kp RC(BACKSPACE)  &none                                            &none   &kp RC(BACKSPACE)  &kp RC(DELETE)
            >;
        };

        Navigation {
            bindings = <
&trans   &kp Z            &mt HOME PG_UP   &kp UP_ARROW     &mt END PG_DN    &trans                               &kp C_PLAY_PAUSE              &trans     &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &kp RG(RS(D))  &trans
&kp TAB  &trans           &kp LEFT_ARROW   &kp DOWN_ARROW   &kp RIGHT_ARROW  &trans               &kp C_PREVIOUS  &trans            &kp C_NEXT  &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK      &trans
&to 2    &mt RC(F) RC(A)  &mt RG(V) RC(V)  &mt RC(X) RC(C)  &mt RC(Y) RC(Z)  &bt BT_CLR  &to 0                    &kp C_MUTE                    &trans     &kp RSHFT       &kp RCTRL       &kp RALT         &kp RGUI       &trans
                                           &trans           &none            &trans                                                             &dbl_mclk  &mkp LCLK       &trans
            >;

            sensor-bindings = <&bt_select>;
        };

        Num+Sym {
            bindings = <
&trans     &trans  &kp N7       &kp N3  &kp N4  &kp PERCENT                        &trans          &trans    &kp BACKSLASH                   &kp POUND                           &kp CARET              &mt DOUBLE_QUOTES SINGLE_QUOTE  &trans
&kp EQUAL  &kp N0  &key_repeat  &kp N1  &kp N2  &kp N9                     &trans  &trans  &trans  &kp PIPE  &kp ASTRK                       &kp SLASH                           &kp PLUS               &kp MINUS                       &mt COLON SEMI
&trans     &trans  &kp N8       &kp N5  &kp N6  &kp DOLLAR        &to 0            &trans          &trans    &mt LESS_THAN LEFT_PARENTHESIS  &mt GREATER_THAN RIGHT_PARENTHESIS  &mt LBRC LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET   &to 3
                                &trans  &trans  &mt COMMA PERIOD                                   &trans    &none                           &trans
            >;
        };

        Ultra {
            bindings = <
&trans  &trans  &trans  &trans           &trans  &trans                     &trans          &trans    &trans  &trans                    &apo_y  &trans  &trans
&none   &apo_r  &apo_s  &apo_t           &trans  &trans             &trans  &trans  &trans  &trans    &apo_n  &trans                    &trans  &trans  &none
&trans  &trans  &apo_c  &trans           &trans  &trans   &trans            &trans          &trans    &apo_L  &trans                    &apo_v  &trans  &trans
                        &mt TILDE UNDER  &comma  &period                                    &kp AMPS  &kp AT  &mt QUESTION EXCLAMATION
            >;
        };

        layer_5 {
            bindings = <
&none   &curls  &brackets  &parents  &carets  &trans                    &trans          &trans  &fe     &trans  &trans  &trans  &none
&trans  &trans  &trans     &trans    &trans   &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans    &trans   &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                           &trans    &none    &none                                     &none   &ef     &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &super_ad  &main_ad  &not_app  &year   &none                     &trans          &none   &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans    &trans    &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans    &trans    &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                             &trans    &trans  &trans                                    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans    &trans    &trans    &trans    &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans    &trans    &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &dot_net  &dot_com  &dot_org  &dot_gov  &none   &trans            &trans          &none   &trans  &trans  &trans  &trans  &trans
                            &trans    &trans    &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
